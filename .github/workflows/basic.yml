name: Basic usage

on:
  push:
  pull_request:
  schedule:
    # Weekly, at 5:30 AM on Saturday (somewhat randomly chosen).
    - cron: '30 5 * * 6'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-20.04
    name: Linting
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run clang-format
        run: ./tools/project-clang-format.py --clang-format clang-format-10

  basic:
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2016, windows-2019]
        include:
          - boost-version: 1.72.0
    runs-on: '${{ matrix.os }}'
    name: 'Build: ${{ matrix.os }}'
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Cache Boost
        uses: actions/cache@v2
        with:
          path: boost_*.tar.gz
          key: 'boost_${{ matrix.boost-version }}'
      - name: Build Boost
        run: |
          python -m project.boost.download --cache . '${{ matrix.boost-version }}' boost
          python -m project.boost.build -- boost --with-filesystem
      - name: Build example project
        run: |
          $src_dir = Join-Path examples boost
          python -m project.cmake.build --boost boost --install install -- $src_dir
      - name: Run example project
        run: ./.ci/run_foo.ps1 (Join-Path (Get-Location).Path install bin foo)

  publish:
    # TODO: figure out how to add a dependency on the *toolsets workflows.
    needs: [lint, basic]
    runs-on: ubuntu-20.04
    name: Publish
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: Verify package can be installed
        run: python3 -m pip install .
      - name: Install package builder
        run: python3 -m pip install --upgrade build
      - name: Build package
        run: python3 -m build
      - name: Publish as artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          if-no-files-found: error
      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: '${{ secrets.PYPI_API_TOKEN }}'
